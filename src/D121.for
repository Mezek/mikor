C      PROGRAM D121RD
C
      SUBROUTINE MIKOR(K,N,X,F,R,T,L,H,EPS,FLAG,EXTERN,AX,BX)
C THIS SUBROUTINE IS INTENDED FOR THE EVALUATION OF A GROUP OF THE
C MULTIDIMENSION INTEGRALS WITH THE CONSTANT LIMITS OF THE INTEGRATION
C K IS THE NUMBER OF VARIABLES OF THE INTEGRATION (THE MAXIMUM K IS 20)
C N IS THE NUMBER OF INTEGRALS IN THE GROUP
C DIMENSION X(K) CONTAINS THE VARIABLES OF THE INTEGRATION
C DIMENSION F(N) CONTAINS THE VALUES   OF THE INTEGRABLE FUNCTIONS
C DIMENSION R(N,2) CONTAINS THE RESULTS AND THE ACTUAL ERRORS
C DIMENSION T(2) CONTAINS THE MINIMUM (T(1)) AND THE MAXIMUM (T(2))
C NUMBER OF POINTS OF THE MULTIDIMENSION NET OF THE INTEGRATION
C L IS THE ORDER OF THE PERIODISATION (L=1,2,3 ARE RECOMMENDED)
C THE VALUE   OF H TO CHOOSE IN THE INTERVAL (0.1,10.) ARE RECOMMENDED
C EPS IS THE MAXIMUM ERROR OF THE INTEGRATION
C IF EPS=0 THEN EXECUTE THE INTEGRATION WITH TWO FIXED NETS
C AND THE RESULTS ARE R(I,1) AND R(I,2) ACCORDINGLY (I=1,2,...,N)
C THE POSITIVE EPS MEANS,THAT THE INTEGRATION WITH THE MAXIMUM ABSOLUTE
C ERROR EPS IS REQUIRED AND THE NEGATIVE EPS MEANS THE SAME WITH THE
C MAXIMUM RELATIVE ERROR ABS(EPS)
C IN THIS CASE R(I,1) CONTAINS THE VALUES   OF THE INTEGRALS AND R(I,2)-
C THE VALUES   OF THE ACTUAL ERRORS (ABSOLUTE OR RELATIVE)
C FLAG IS THE PARAMETER AT THE EXIT
C WHEN EPS IS NONZERO FLAG=0 MEANS,THAT THE MAXIMUM NUMBER OF POINTS
C IS ARRIVED, BUT THE REQUIRED PRECISION IS NOT ARRIVED
C EXTERN IS THE NAME OF THE EXTERNAL SUBROUTINE,WHICH CALCULATE
C THE DIMENSION F(N) FOR THE DIMENSION X(K) AT THE ENTRY
C THIS SUBROUTINE IS CALLED AS SUBROUTINE EXTERN(K,N,X,F,R,EPS,FLAG)
C AND MUST BE DESCRIBED IN THE OPERATOR EXTERNAL OF THE MAIN PROGRAM
C WHEN FLAG AT THE ENTRY OF EXTERN IS NONZERO IT IS POSSIBLE TO BREAK
C OFF THE PROCESS OF FUTHER INTEGRATION BY ASSIGNING THE NEGATIVE FLAG
C AT THE EXIT OF EXTERN
C DIMENSION AX(K),BX(K) CONTAIN THE LOWER AND THE UPPER LIMITS
      IMPLICIT REAL*8 (A-H,O-Z)
      DOUBLE PRECISION X,F,R,T,H,EPS,FLAG,AX,BX,P
      EXTERNAL EXTERN
      COMMON/MIKINK/KDIM,KDAB,P/TIMEMI/TIMEM
      DIMENSION X(K),F(N),EPS(N),AX(K),BX(K),T(2),R(N)
      KDIM=1
      KDAB=1
   2  FORMAT(/' THE REQUIRED PRECISION EPS=',D10.3,' IS NOT ARRIVED',/,
     *' IT IS NECESSARY T(1) GREATER THEN=',F8.0,' TO ASSIGN OR THE,
     * VALUE',/,' OF L TO CHANGE',/,
     *' THE ACTUAL VALUES OF ERRORS LOWER ARE PRINTED')
    3 FORMAT (' ',5D12.4)
   12 FORMAT(' THE REQUIRED PRECISION EPS(N) IS NOT ARRIVED:'/(10D12.5))
   13 FORMAT(' IT IS NECESSARY T(1) GREATER THEN=',F8.0,' TO ASSIGN,OR
     * THE VALUE OF L TO CHANGE',/,
     *' THE ACTUAL VALUES OF ERRORS LOWER ARE PRINTED')
      CALL DATKOR(K,0.D0)
      CALL INKOR(K,N,X,F,R,T,L,H,EPS,FLAG,EXTERN,AX,BX)
      IF(FLAG)10,1,10
    1 CONTINUE
      IF (KDIM.NE.1) GO TO 20
      WRITE(*, 2) EPS(1),P
      GO TO 21
   20 CONTINUE
      WRITE(*, 12) EPS
      WRITE(*, 13) P
   21 CONTINUE
      N1=N+1
      N2=N+N
      WRITE(*, 3) (R(I),I=N1,N2)
  10  CONTINUE
      RETURN
      END
C
      SUBROUTINE DATKOR(K,PRINT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DOUBLE PRECISION PRINT,PT,AT
      COMMON/INDAT/ PT(30),AT(30),LT
      DIMENSION KP(27),KP1(26),KA(260),KA1(103),KA104(78),KA182(69)
      EQUIVALENCE (KA(1),KA1),(KA(104),KA104),(KA(182),KA182)
      DATA KAMAX/400000/
      DATA LKP/27/, LKP1/26/, KMAX/20/
      DATA KP/23,53,101,151,307,523,829,1259,2129,3001,4001,5003,6007,
     *8191,10007,13001,20011,30011,40009,50021,75011,100003,200003,
     *500009,1000003,2000003,5000011/
      DATA KP1/3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,
     *6765,10946,17711,28657,46368,75025,121393,196418,317811,514229/
      DATA KA1/
     *	 5,17,53,20,75,78,116,433,359,276,722,1476,592,739,544,2135,
     *	 2759,2023,2979,3483,7623,6697,19477,55279,90347,191421,613511,
     *	 5,31,15,22,42,178,45,483,766,174,113,792,1351,2488,1206,778,
     * 2891,2243,2775,3353,7601,10101,19293,55251,122713,191447,492615,
     *	 21,13,127,64,146,302,618,408,1534,840,509,1386,198,830,2803,
     *	 2311,2945,3581,7639,10019,19777,61357,122713,191447,492615,
     *	 109,195,118,109,200,41,233,1751,2037,312,1632,2240,1940,3169,
     *	 2347,2875,3431,7647,10049,19277,33363,66681,191401,613509/
      DATA KA104/
     *	 27,90,227,596,170,115,229,721,2107,2304,2116,1773,2253,2965,
     *	 3401,7555,6703,24561,33339,66671,191443,613509,
     *	 32,392,86,993,1850,2362,1253,3787,436,1415,3295,3267,3093,
     *	 3455,7809,10029,19827,61365,90343,191437,492261,
     *	 636,108,1579,526,1597,2139,470,1437,2533,2077,3119,3469,7813,
     *	 10099,19461,61365,90343,191415,613507,
     *	 431,1262,1751,564,1415,1715,2065,2901,3413,7677,6699,19153,
     *	 33341,107369,191435,613515/
      DATA KA182/349,
     *	 586,1409,2205,3237,4325,5419,8063,10151,24573,55269,107393,
     *	 191389,613515,
     * 2191,3319,4319,3407,8099,10151,24573,61365,107377,191389,613507,
     *	 5407,8061,10761,24573,61371,107375,191433,478471,
     *	 5407,8099,10143,19363,61371,106245,191433,478471,
     *	 5417,8061,10171,20015,61371,106265,191405,478471,
     *	 61373,106257,191405,492613,
     *	 61353,106245,191421,492613,
     *	 61353,106257,191421,478471,
     *	 61353,106245,191421,478471,
     *	 61353,106233,191421,478471/
      DO 30 I=1,30
      PT(I)=0.D0
  30  AT(I)=0.D0
      KR=K
      IF(KR-KMAX)2,2,1
   1  WRITE(*, 101)
 101  FORMAT('  SUBROUTINE MIKOR OR MIKOR2',/,
     *' THE VALUE OF K MUST BE LESS THEN 21')
      STOP
   2  IF(KR-3)3,5,5
   3  LT=LKP1-1
      DO 4 I=1,LT
      J=I+1
      PT(I)=KP1(J)
      AT(I)=KP1(I)
   4  CONTINUE
      GO TO 20
   5  CONTINUE
      L=2
      I=0
      GO TO 9
   6  LT=0
   7  I=I+1
      LT=LT+1
      IF(KA(I)-KAMAX)7,8,8
   8  L=L+1
   9  IF(L-KR)6,10,10
  10  I=I-LT
      J=LKP-LT
      DO 11 IJ=1,LT
      I=I+1
      J=J+1
      PT(IJ)=KP(J)
  11  AT(IJ)=KA(I)
  20  CONTINUE
      IF(PRINT)21,23,21
  21  CONTINUE
      WRITE(*, 102) K
      LTP=LT
      DO 50 IPR=1,100,10
      LP=MIN0(LTP,10)
      KPR=IPR+LP-1
      WRITE(*, 104) (PT(I),I=IPR,KPR)
      WRITE(*, 103) (AT(I),I=IPR,KPR)
      LTP=LTP-10
      IF(LTP)51,51,50
  50  CONTINUE
  51  CONTINUE
  23  CONTINUE
      RETURN
 102  FORMAT('  THE PARAMETERS OF THE KOROBOV, S  NETS FOR K=',I2)
 104  FORMAT('  P=',6F10.0)
 103  FORMAT('  A=',6F10.0)
      END
C
      SUBROUTINE INKOR(K,N,X,F,R,T,L,H,EPS,FLAG,EXTERN,AX,BX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DOUBLE PRECISION X,F,R,T,H,EPS,FLAG,AX,BX,P,PT,AT
      COMMON/MIKINK/KDIM,KDAB,P/TIMEMI/TIMEM/INDAT/PT(30),AT(30),LT
      DIMENSION X(K),F(N),R(N)	,S(20),S1(20),CSIG(11),CTAU(11)
      DIMENSION AX(K),BX(K),T(2),EPS(N),AD(2)
      INTEGER TIN,TCAL
      EQUIVALENCE(D,AD)
      DATA LMAX/10/, RFLAG/1.D6/, CP3/10.D0/, CMAX/20.D0/
      CALL  TIMED(TIN)
      ITM=2
      KR=K
      LP=L
      N2=N+N
      N3=N2+N
      N21=N2+1
      P3=3.D0**KR
      PMAX=T(2)
      IF(PMAX)1,2,300
   1  PMAX=CMAX*P3
      GO TO 300
   2  PMAX=PT(LT)
 300  CONTINUE
      TIME=TIMEM
      IF(TIME)301,301,302
 301  TIME=1.D12
 302  CNTP=0.D0
      Q=T(1)
      IF(Q)7,9,9
   7  CONTINUE
      IF(KR-10)8,8,9
   8  CONTINUE
      Q=P3
   9  CONTINUE
      P3=CP3*P3
      IF(Q-PT(LT))4,4,3
   3  Q=PT(LT)
   4  IF(LP-LMAX)6,6,5
   5  LP=LMAX
   6  DO 999 KT=1,LT
      FLAG=0.D0
      P=PT(KT)
      A=AT(KT)
      IF(Q-P)10,10,999
  10  Z=2.D0*P
      GO TO (401,402),ITM
 401  CALL  TIMED(TCAL)
      TMAX=TCAL*(CNTP+P)/CNTP
      IF(TMAX-TIME)402,402,411
 411  WRITE(*, 500) TCAL
      GO TO 900
 500  FORMAT('  TIME LIMIT AT MIKOR',D10.3,' SEC.')
 402  ITM=1
      CNTP=CNTP+P
      LFLAG=2
      IF(LP)14,19,19
  14  LP=0
      IF(Q-P3)16,15,15
  15  LP=1
  16  IF(KR-6)17,17,19
  17  LP=LP+1
  19  CONTINUE
      IF(LP)20,20,11
  11  LFLAG=1
      CALL PERIOD(KR,P,H,LP,ALPHA)
      ALPHA1=1.D0/ALPHA
      ALPHA2=0.5D0*ALPHA
      BETA=1.D0-ALPHA
      BETA1=1.D0/BETA
      L1=LP+1
      AK=0.D0
      AL=L1
      A2L=LP+L1
      B2L=A2L*AL/(AL-1.D0)
      CL=1.D0
      C2L=1.D0
      DO 12 I=1,L1
      CTAU(I)=CL/A2L
      CSIG(I)=CTAU(I)/(A2L+1.D0)
      AK=AK+1.D0
      AL=AL-1.D0
      A2L=A2L-1.D0
      CL=CL*AL/AK
      C2L=C2L*A2L/AK
  12  CONTINUE
      B2L=B2L*C2L*BETA1
      DO 13 I=1,L1
      CTAU(I)=B2L*CTAU(I)
      CSIG(I)=B2L*ALPHA*CSIG(I)
  13  CONTINUE
  20  A1=1.D0
      DO 23 JK=1,KR
      IF (DMOD(A1,2.D0)) 21,21,22
  21  A1=P-A1
  22  S1(JK)=A1
      S(JK)=S1(JK)*2.D0
      A1=DMOD(A1*A,P)
  23  CONTINUE
      DO 24 IJ=1,N2
  24  R(IJ)=0.D0
      JN=0
      M=P
      DO  100 I=1,2
      GO TO (29,28),KDAB
  28  CONTINUE
      DO 30 IJ=N21,N3
  30  R(IJ)=0.D0
  29  CONTINUE
      DO 90 J=1,M
      FACT=1.D0
      F1=1.D0
      DO 70 JK=1,KR
      Y1=S1(JK)/Z
      S1(JK)=S1(JK)+S(JK)-Z
      IF(S1(JK))31,32,32
  31  S1(JK)=S1(JK)+Z
  32  GO TO (33,61),LFLAG
  33  W=Y1
      Y=W*ALPHA1
      IF(W-ALPHA)50,40,40
  40  IF(W-BETA)41,41,42
  41  Y1=(W-ALPHA2)*BETA1
      TAU=BETA1
      GO TO 60
  42  Y=ALPHA1-Y
  50  Y1=-Y
      Y2=Y
      SIG=CSIG(1)
      TAU=CTAU(1)
      DO 51 IL=2,L1
      Y2=Y2*Y
      SIG=SIG*Y1+CSIG(IL)
      TAU=TAU*Y1+CTAU(IL)
  51  CONTINUE
      Y1=SIG*Y2*Y
      IF(Y1)53,54,54
  53  CONTINUE
      Y1=0.D0
  54  CONTINUE
      TAU=TAU*Y2
      IF(W-ALPHA)60,52,52
   52 Y1=1.D0-Y1
  60  FACT=FACT*TAU
  61  CONTINUE
      Y=BX(JK)-AX(JK)
      X(JK)=Y*Y1+AX(JK)
      GO TO (63,64),KDAB
  63  CONTINUE
      FACT=FACT*Y
      GO TO 70
   64 F1=F1*Y
  70  CONTINUE
      CALL EXTERN(K,N,X,F,R,EPS,FLAG)
CALL USER'S SUBROUTINE
      DO 89 IJ=1,N
      IN=IJ+JN
      J2=IJ+N2
      GO TO (83,84),KDAB
  83  R(IN)=R(IN)+FACT*F(IJ)
      GO TO 89
  84  F1=F1*FACT*F(IJ)
      AD(1)=R(IN)
      AD(2)=R(J2)
      D=D+F1
      R(IN)=AD(1)
      R(J2)=AD(2)
  89  CONTINUE
  90  CONTINUE
      DO 91 JK=1,KR
      S1(JK)=S(JK)
  91  CONTINUE
      DO 99 IJ=1,N
      IN=IJ+JN
      J2=IJ+N2
      GO TO (93,94),KDAB
  93  R(IN)=R(IN)/P
      GO TO 99
  94  AD(1)=R(IN)
      AD(2)=R(J2)
      R(IN)=D/P
  99  CONTINUE
      JN=JN+N
 100  CONTINUE
      KFLAG=1
      EPS1=EPS(1)
      DO 200 I=1,N
      IN=I+N
      GO TO (102,101),KDIM
 101  EPS1=EPS(I)
 102  CONTINUE
      IF(EPS1)110,200,110
 110  CONTINUE
      R(I)=0.5D0*(R(I)+R(IN))
      R1=DABS(R(I)-R(IN))
      R(IN)=R1
      IF(EPS1)120,140,140
 120  R(IN)=RFLAG
      IF(R(I))130,140,130
  130 R(IN)=DABS(R1/R(I))
 140  IF(R(IN)-DABS(EPS1))200,160,160
 160  KFLAG=2
 200  CONTINUE
      FLAG=P
      GO TO (777,201),KFLAG
 201  IF(P-PMAX)800,900,900
 800  CALL EXTERN(K,N,X,F,R,EPS,FLAG)
      IF(FLAG)777,999,999
 999  CONTINUE
 900  FLAG=0.D0
 777  RETURN
      END
C
      SUBROUTINE PERIOD(KR,P,H,LP,ALPHA)
      IMPLICIT REAL*8 (A-H,O-Z)
      DOUBLE PRECISION P,H,ALPHA,A,AMAX,AK
      DATA AMAX/0.3D0/, H1/1.D0/
      A=H
      IF(A)1,1,2
   1  A=H1
   2  AK=KR
      ALPHA=A*LP/P**(1.D0/AK)
      IF(ALPHA-AMAX)4,4,3
   3  ALPHA=AMAX
   4  RETURN
      END
